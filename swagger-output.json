{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "CrediKhaata - Credit Management API",
    "description": "This API provides a backend for CrediKhaata, a credit and loan management system. It allows user registration/login, managing customers, loans, repayments, and viewing statistics. Secure access is enforced using JWT-based authentication."
  },
  "host": "creditkhaata-backend.onrender.com",
  "basePath": "/",
  "schemes": ["https"],
  "tags": [
    { "name": "Auth", "description": "Authentication and user management" },
    { "name": "Customers", "description": "Customer CRUD operations" },
    { "name": "Loans", "description": "Loan issuing and retrieval" },
    { "name": "Repayments", "description": "Loan repayment records" },
    { "name": "Stats", "description": "Summary and overdue statistics" }
  ],
  "paths": {
    "/": {
      "get": {
        "summary": "Welcome route",
        "description": "Basic test route for the CrediKhaata backend.",
        "responses": {
          "200": {
            "description": "API is working"
          }
        }
      }
    },
    "/api/v1/auth/register": {
      "post": {
        "tags": ["Auth"],
        "summary": "Register a new user",
        "description": "Creates a new user with email and password.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": ["email", "password"],
              "properties": {
                "email": { "type": "string", "example": "user@example.com" },
                "password": { "type": "string", "example": "securepassword123" }
              }
            }
          }
        ],
        "responses": {
          "201": { "description": "User registered successfully" },
          "400": { "description": "Invalid input" },
          "500": { "description": "Server error" }
        }
      }
    },
    "/api/v1/auth/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "Login an existing user",
        "description": "Logs in a user and returns a JWT token.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": ["email", "password"],
              "properties": {
                "email": { "type": "string", "example": "user@example.com" },
                "password": { "type": "string", "example": "securepassword123" }
              }
            }
          }
        ],
        "responses": {
          "200": { "description": "Login successful" },
          "401": { "description": "Invalid credentials" },
          "500": { "description": "Server error" }
        }
      }
    },
    "/api/v1/customers/": {
      "get": {
        "tags": ["Customers"],
        "summary": "Get all customers",
        "description": "Returns a list of all customers. Requires a valid JWT token.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Bearer JWT token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": { "description": "Customers retrieved" },
          "401": { "description": "Unauthorized" },
          "500": { "description": "Server error" }
        }
      },
      "post": {
        "tags": ["Customers"],
        "summary": "Create a new customer",
        "description": "Adds a new customer with trust score and credit limit.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Bearer JWT token",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": { "type": "string", "example": "John Doe" },
                "phone": { "type": "string", "example": "+919876543210" },
                "address": { "type": "string", "example": "123 Street, City" },
                "trustScore": { "type": "number", "example": 85 },
                "creditLimit": { "type": "number", "example": 50000 }
              }
            }
          }
        ],
        "responses": {
          "201": { "description": "Customer created" },
          "400": { "description": "Invalid input" },
          "500": { "description": "Server error" }
        }
      }
    },
    "/api/v1/customers/{id}": {
      "put": {
        "tags": ["Customers"],
        "summary": "Update customer",
        "description": "Update details of a specific customer.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Bearer JWT token",
            "type": "string"
          }
        ],
        "responses": {
          "200": { "description": "Customer updated" },
          "400": { "description": "Invalid ID" },
          "500": { "description": "Server error" }
        }
      },
      "delete": {
        "tags": ["Customers"],
        "summary": "Delete customer",
        "description": "Deletes a customer by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": { "description": "Customer deleted" },
          "404": { "description": "Customer not found" },
          "500": { "description": "Server error" }
        }
      }
    },
    "/api/v1/loans/": {
      "get": {
        "tags": ["Loans"],
        "summary": "Get all loans",
        "description": "Retrieve loans with optional status filter.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "status",
            "in": "query",
            "type": "string",
            "description": "Filter by loan status (e.g., active, closed, overdue)"
          }
        ],
        "responses": {
          "200": { "description": "Loans retrieved" },
          "500": { "description": "Server error" }
        }
      },
      "post": {
        "tags": ["Loans"],
        "summary": "Create a new loan",
        "description": "Assign a new loan to a customer.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "customerId": { "type": "string", "example": "cus123" },
                "itemDescription": {
                  "type": "string",
                  "example": "Mobile Phone"
                },
                "loanAmount": { "type": "number", "example": 25000 },
                "issueDate": { "type": "string", "example": "2024-01-01" },
                "dueDate": { "type": "string", "example": "2024-03-01" },
                "frequency": { "type": "string", "example": "monthly" },
                "interestPercent": { "type": "number", "example": 5 },
                "graceDays": { "type": "number", "example": 7 }
              }
            }
          }
        ],
        "responses": {
          "201": { "description": "Loan created" },
          "400": { "description": "Invalid loan data" },
          "500": { "description": "Server error" }
        }
      }
    },
    "/api/v1/repayments/": {
      "get": {
        "tags": ["Repayments"],
        "summary": "Get all repayments",
        "description": "Returns all repayments made by customers.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": { "description": "Repayments retrieved" },
          "500": { "description": "Server error" }
        }
      },
      "post": {
        "tags": ["Repayments"],
        "summary": "Record a repayment",
        "description": "Adds a repayment against a loan.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "loanId": { "type": "string", "example": "loan123" },
                "amount": { "type": "number", "example": 5000 },
                "date": { "type": "string", "example": "2024-02-01" }
              }
            }
          }
        ],
        "responses": {
          "201": { "description": "Repayment recorded" },
          "500": { "description": "Server error" }
        }
      }
    },
    "/api/v1/stats/summary": {
      "get": {
        "tags": ["Stats"],
        "summary": "Summary statistics",
        "description": "Get overall financial and customer summary stats.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": { "description": "Stats retrieved" },
          "500": { "description": "Server error" }
        }
      }
    },
    "/api/v1/stats/overdue": {
      "get": {
        "tags": ["Stats"],
        "summary": "Overdue loans",
        "description": "Returns a list of overdue loans for follow-up or reminders.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": { "description": "Overdue loans retrieved" },
          "500": { "description": "Server error" }
        }
      }
    }
  }
}
